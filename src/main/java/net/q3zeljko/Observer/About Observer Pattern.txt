Strategy pattern defines a one-to-many dependency between objects so that when one object
changes  state,all its dependents are notified and updated automatically.

Subjects (Observables) update Observers using a common interface.

Observers are loosely coupled - Observable doesn't know anything about them, other than
the fact that they implement the Observer interface.

You can push or pull data from the Observable when using the pattern.

You can't depend on a specific order of notification for your Observers.